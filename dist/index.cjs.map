{"version":3,"sources":["../index.ts","../src/http.ts","../src/android.ts","../src/client.ts"],"sourcesContent":["export {GboxClient} from './src/client';\n\n\n","import axios, { AxiosInstance } from 'axios';\n\nfunction getHttp(baseURL: string, apiKey: string): AxiosInstance {\n    const http = axios.create({\n        baseURL: baseURL,\n        headers: {\n            'Content-Type': 'application/json',\n            \"Authorization\": `Bearer ${apiKey}`,\n        },\n    });\n\n    return http;\n}\n\nexport default getHttp; ","import { AxiosInstance } from 'axios';\n\ntype Point = [number, number];\ntype AndroidResponse = {\n    sandboxId?: string;\n    screenshot?: string;\n    [key: string]: any;\n};\n\nexport default class AndroidGbox {\n    private http: AxiosInstance;\n    public sandboxId: string | null;\n\n    constructor(http: AxiosInstance) {\n        this.http = http;\n        this.sandboxId = null;\n\n        const init = async (): Promise<AndroidGbox> => {\n            const { data } = await this.http.post('/api/v1/android/start');\n            this.sandboxId = data.sandboxId;\n            return this;\n        };\n\n        return init() as unknown as AndroidGbox;\n    }\n\n    async screenshot(): Promise<string> {\n        const { data } = await this.http.post(`/api/v1/android/screenshot/${this.sandboxId}`);\n        return data.screenshot;\n    }\n\n    async click(x: number, y: number): Promise<AndroidResponse> {\n        const { data } = await this.http.post(`/api/v1/android/click/${this.sandboxId}`, { x, y });\n        return data;\n    }\n\n    async scroll(start: Point, end: Point): Promise<AndroidResponse> {\n        const [start_x, start_y] = start;\n        const [end_x, end_y] = end;\n        const { data } = await this.http.post(`/api/v1/android/scroll/${this.sandboxId}`, { start_x, start_y, end_x, end_y });\n        return data;\n    }\n\n    async keypress(key: string): Promise<AndroidResponse> {\n        const { data } = await this.http.post(`/api/v1/android/keypress/${this.sandboxId}`, { key });\n        return data;\n    }\n} ","\n\nimport getHttp from './http';\nimport AndroidGbox from './android';\nimport { AxiosInstance } from 'axios';\n\nconst defaultBaseUrl = 'https://gboxes.app';\nconst defaultApiKey = process.env.GBOX_API_KEY;\nconst envBaseUrl = process.env.GBOX_BASE_URL;\n\ninterface GboxClientOptions {\n    apiKey?: string;\n    baseUrl?: string;\n}\n\nexport class GboxClient {\n    private http: AxiosInstance;\n    constructor(options: GboxClientOptions = {}) {\n        const key = options.apiKey || defaultApiKey;\n    \n        if (!key) {\n            throw new Error('GBOX_API_KEY is not set on environment variables');\n        }\n        \n        const baseUrlValue = options.baseUrl || envBaseUrl || defaultBaseUrl;\n\n        this.http = getHttp(baseUrlValue, key);\n    }\n\n    async initAndroid(): Promise<AndroidGbox> {\n        const android = await new AndroidGbox(this.http);\n        return android;\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,mBAAqC;AAErC,SAAS,QAAQ,SAAiB,QAA+B;AAC7D,QAAM,OAAO,aAAAA,QAAM,OAAO;AAAA,IACtB;AAAA,IACA,SAAS;AAAA,MACL,gBAAgB;AAAA,MAChB,iBAAiB,UAAU,MAAM;AAAA,IACrC;AAAA,EACJ,CAAC;AAED,SAAO;AACX;AAEA,IAAO,eAAQ;;;ACLf,IAAqB,cAArB,MAAiC;AAAA,EAI7B,YAAY,MAAqB;AAC7B,SAAK,OAAO;AACZ,SAAK,YAAY;AAEjB,UAAM,OAAO,YAAkC;AAC3C,YAAM,EAAE,KAAK,IAAI,MAAM,KAAK,KAAK,KAAK,uBAAuB;AAC7D,WAAK,YAAY,KAAK;AACtB,aAAO;AAAA,IACX;AAEA,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,MAAM,aAA8B;AAChC,UAAM,EAAE,KAAK,IAAI,MAAM,KAAK,KAAK,KAAK,8BAA8B,KAAK,SAAS,EAAE;AACpF,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,MAAM,MAAM,GAAW,GAAqC;AACxD,UAAM,EAAE,KAAK,IAAI,MAAM,KAAK,KAAK,KAAK,yBAAyB,KAAK,SAAS,IAAI,EAAE,GAAG,EAAE,CAAC;AACzF,WAAO;AAAA,EACX;AAAA,EAEA,MAAM,OAAO,OAAc,KAAsC;AAC7D,UAAM,CAAC,SAAS,OAAO,IAAI;AAC3B,UAAM,CAAC,OAAO,KAAK,IAAI;AACvB,UAAM,EAAE,KAAK,IAAI,MAAM,KAAK,KAAK,KAAK,0BAA0B,KAAK,SAAS,IAAI,EAAE,SAAS,SAAS,OAAO,MAAM,CAAC;AACpH,WAAO;AAAA,EACX;AAAA,EAEA,MAAM,SAAS,KAAuC;AAClD,UAAM,EAAE,KAAK,IAAI,MAAM,KAAK,KAAK,KAAK,4BAA4B,KAAK,SAAS,IAAI,EAAE,IAAI,CAAC;AAC3F,WAAO;AAAA,EACX;AACJ;;;ACzCA,IAAM,iBAAiB;AACvB,IAAM,gBAAgB,QAAQ,IAAI;AAClC,IAAM,aAAa,QAAQ,IAAI;AAOxB,IAAM,aAAN,MAAiB;AAAA,EAEpB,YAAY,UAA6B,CAAC,GAAG;AACzC,UAAM,MAAM,QAAQ,UAAU;AAE9B,QAAI,CAAC,KAAK;AACN,YAAM,IAAI,MAAM,kDAAkD;AAAA,IACtE;AAEA,UAAM,eAAe,QAAQ,WAAW,cAAc;AAEtD,SAAK,OAAO,aAAQ,cAAc,GAAG;AAAA,EACzC;AAAA,EAEA,MAAM,cAAoC;AACtC,UAAM,UAAU,MAAM,IAAI,YAAY,KAAK,IAAI;AAC/C,WAAO;AAAA,EACX;AACJ;","names":["axios"]}